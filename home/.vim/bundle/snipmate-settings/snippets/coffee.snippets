snippet -
	-> ${1}
snippet =
	=> ${1}
snippet .f
	.find(${1})
snippet 2
	@$(${1})
snippet 4
	$(${1})
snippet 8
	arguments${1}
snippet F
	false${1}
snippet N
	null${1}
snippet T
	true${1}
snippet a
	alert(${1})
snippet b
	break${1}
snippet bc
	class ${1}List extends Backbone.Collection
	    model:
snippet be
	beforeEach ->
	    ${1}
snippet bm
	class ${1} extends Backbone.Model
snippet bv
	class ${1}View extends Backbone.View
	    template: Templates.
	    tagName: ''
	    className: ''

	    initialize: ->
	        @model.bind('change', @render, @)

	    render: ->
	        state = @model.toJSON()
	        $(@el).html(@template(state))
	        @
snippet c
	class ${1}
snippet d
	debugger${1}
snippet de
	describe '${1}', ->
snippet e
	else
	    ${1}
snippet i
	it '${1}', ->
snippet l
	console.log(${1})
snippet len
	length${1}
snippet p
	preventDefault()${1}
snippet r
	return ${1}
snippet ru
	runs -> ${1}
snippet to
	typeof ${1}
snippet w
	waits ${1:333}
snippet x
	expect(${1}).to
