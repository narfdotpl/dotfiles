[user]
    name = Maciej Konieczny
    email = hello@narf.pl

[github]
    user = narfdotpl

[advice]
    skippedCherryPicks = false

[color]
    ui = auto

[diff]
    compactionHeuristic = true

[init]
    templatedir = ~/.config/git/template

[maintenance "prefetch"]
    enabled = true

[merge]
    ff = only

[push]
    autoSetupRemote = true
    followTags = true

[alias]
    a = !git add --all && git c
    aa = !git add --all && git ca
    ap = !git add --all --patch && git cv
    ar = !git add --all && git r
    branch-fzf = !git branch | cut -c 3- | fzf
    b = "!f() { [[ $1 = '' ]] && git checkout $(git branch-fzf) || git checkout -b $1; }; f"
    bb = !git co -
    bm = !git branch -M
    bmm = !git branch --merged master | sed 's/^[\\* ]*//g' \
          | ag -v '^master$'
    c = !git cv --all
    ca = !git diff HEAD | gvim -R --nofork - && git cv --all --amend
    car = !git ca && git r
    cd = !git co develop
    cl = clone
    cm = !git co master
    cmp = !python3 ~/.scripts/git/get-compare-links.py
    co = checkout
    cp = cherry-pick
    cv = "!f() { git commit --verbose $* && git q3 $(gshuf -n 1 -e excellent impressive perfect); }; f"
    d = !python3 ~/.scripts/git/diff.py
    db = branch -D
    df = "!f() { git d $(git lo | fzf --ansi --no-sort --query \"$*\" | awk '{ print $1 }'); }; f"
    e = !$EDIT $(git u)
    gca = gc --aggressive
    gh = !gh browse
    h = help
    ig = !git s --ignored | ag '!!' | awk '{ print substr($0, 4) }' | more
    l = !python3 ~/.scripts/git/log.py | grcat conf.git-l | less -R
    ll = !git lo | less -R +G
    lo = "!f() { git log --oneline --reverse $* | grcat conf.git-l | less -R; }; f"
    ls = !git lo --max-count=$(git l | wc -l | tr -d ' ') | cat
    m = !python3 ~/.scripts/git/update-branch.py && git q3 voc_you_flag
    mm = merge -
    ms = maintenance start
    msg = "!f() { git commit --allow-empty --message \"$*\" && git q3 talk; }; f"
    ohm = symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/master
    p = pull
    pf = "!f() { git push --force-with-lease $* && git q3 *holyshit; }; f"
    pp = !git p && git ps
    ps = push
    pu2 = "!f() { python3 ~/.scripts/git/push-upto.py $* && git q3 accuracy; }; f"
    q3 = "!f() { (afplay -v 0.15 $(find ~/sandbox/q3-sounds -name $1.wav) &); }; f"
    r = !python3 ~/.scripts/git/rebase.py
    ra = rebase --abort
    rb = !git checkout $(git recent-branches | fzf)
    re = "!f() { git revert $* && git q3 defense; }; f"
    reh = !git re HEAD
    recent-branches = !git reflog | ag 'checkout: moving from' | awk '{ if (!seen[$NF]++) print $NF }' | ag -v '[a-z0-9]{40}' | head
    repo = !git init && git q3 intro_01 && git msg \"created repo :cake:\" && git a
    rh = "!f() { git reset --hard $* && git q3 denied; }; f"
    rh1 = !git rh HEAD~1
    root-branch = !python3 ~/.scripts/git/root-branch.py
    rs = rebase --skip
    rv = remote --verbose
    s = status --short
    sd = stash drop
    sf = submodule foreach
    sl = !git stash list | less
    sm = !git sf git cm && git sf git m && git c
    sp = stash pop
    ss = !git add --all && git stash save
    u = !git s | ag 'UU' | awk '{ print substr($0, 4) }' | more
    w = !git wip
    when-joined = !python3 ~/.scripts/git/when-joined.py
    who = shortlog --summary --numbered --email
    wip = !git msg WIP:


# vim: set ft=gitconfig :
